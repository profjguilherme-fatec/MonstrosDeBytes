name: CI - Corrigindo batalha sem robo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  qualidade_e_seguranca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (Java 11 obrigatório)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      # Limpar builds antigos antes de recompilar
      - name: Limpar builds antigos
        run: |
          rm -rf robocode/robots/github/
          mkdir -p robocode/robots/github/

      # Compilar todos os robôs para a pasta certa do Robocode
      - name: Compilar robôs na pasta do Robocode
        run: |
          javac -cp libs/robocode.jar -d robocode/robots src/github/*.java

      # Verificar versão dos .class para debug de compatibilidade
      - name: Conferir versões dos .class
        run: |
          for f in robocode/robots/github/*.class; do
            echo -n "$f: "; javap -verbose "$f" | grep "major version"
          done

      - name: Listar robocode/robots/github para debug
        run: ls -l robocode/robots/github

      - name: Download Checkstyle
        run: wget https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.12.4/checkstyle-10.12.4-all.jar -O checkstyle.jar

      - name: Rodar Checkstyle
        run: java -jar checkstyle.jar -c libs/google_checks.xml src/

      - name: Download SpotBugs
        run: wget https://repo1.maven.org/maven2/com/github/spotbugs/spotbugs/4.8.3/spotbugs-4.8.3.tgz -O spotbugs.tgz

      - name: Extrair SpotBugs
        run: tar -xzf spotbugs.tgz

      - name: Permissão para SpotBugs
        run: chmod +x spotbugs-4.8.3/bin/spotbugs

      # SpotBugs agora analisará a pasta robocode/robots/github
      - name: Rodar SpotBugs
        run: |
          spotbugs-4.8.3/bin/spotbugs -textui robocode/robots/github/

      - name: Rodar batalha de teste
        run: |
          bash scripts/testar_batalha.sh robocode/robots

      - name: Verificar arquivos e resultado da batalha
        run: |
          echo 'Arquivo .battle:'
          cat battle_logs/simples.battle || echo "Arquivo .battle não existe"
          echo 'Partial resultado da batalha:'
          head -30 battle_logs/resultado.txt || echo "Resultado da batalha não encontrado"

      - name: Upload battle logs (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: battle-logs
          path: battle_logs/

      - name: Mensagem de sucesso
        if: ${{ success() }}
        run: |
          echo 'CI finalizado com sucesso!'
          echo 'Pipeline completa e aprovada.'
